version: '3.9'
services:
  api-gateway:
    build:
      context: api-gateway
      dockerfile: Dockerfile
    image: acm-api-gateway:1.0
    ports:
      - "80:80"
    restart: always
    container_name: api-gateway
    depends_on:
      - discovery
      - config-server
      - authentication-service

  discovery:
    build:
      context: discovery
      dockerfile: Dockerfile
    image: acm-discovery:1.0
    ports:
      - "8761:8761"
    restart: always
    container_name: discovery

  config-server:
    build:
      context: config-server
      dockerfile: Dockerfile
    image: acm-config-server:1.0
    ports:
      - "8001:8001"
    restart: always
    container_name: config-server

  postgres-acm:
    image: postgres:latest
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ACM
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    volumes:
      - $HOME/postgres/data:/var/lib/postgresql/data
    container_name: postgres-acm

  neo4j-acm:
    image: neo4j:latest
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - $HOME/neo4j/data:/data
    container_name: neo4j-acm
    environment:
      NEO4J_AUTH: neo4j/password

  device-monitoring-service:
    build:
      context: device-monitoring-service
      dockerfile: Dockerfile
    image: acm-device-monitoring:1.0
    ports:
      - "8084:8084"
    restart: always
    container_name: device-monitoring-service

  stats-service:
    build:
      context: stats-service
      dockerfile: Dockerfile
    image: acm-stats-service:1.0
    ports:
      - "8085:8085"
    restart: always
    container_name: stats-service

  authentication-service:
    build:
      context: authentication-service
      dockerfile: Dockerfile
    image: acm-authentication-service:1.0
    ports:
      - "8086:8086"
    restart: always
    container_name: authentication-service
    depends_on:
      - postgres-acm
      - config-server

  management-service:
    build:
      context: management-service
      dockerfile: Dockerfile
    image: acm-management-service:1.0
    ports:
      - "8081:8081"
    restart: always
    container_name: management-service
    depends_on:
      - config-server

  watering-service:
    build:
      context: watering-service
      dockerfile: Dockerfile
    image: acm-watering-service:1.0
    ports:
      - "8082:8082"
    restart: always
    container_name: watering-service
    depends_on:
      - config-server

  measurement-service:
    build:
      context: measurement-service
      dockerfile: Dockerfile
    image: acm-measurement-service:1.0
    ports:
      - "8083:8083"
    restart: always
    container_name: measurement-service
    depends_on:
      - config-server

networks:
  default:
